[{
  "Sources\/Commandant\/Argument.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct Argument<T>",
        "key.doc.comment" : "Describes an argument that can be provided on the command line.",
        "key.offset" : 233,
        "key.namelength" : 8,
        "key.doc.line" : 12,
        "key.length" : 8,
        "key.bodyoffset" : 233,
        "key.bodylength" : 711,
        "key.name" : "Argument",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 31,
        "key.usr" : "s:V10Commandant8Argument",
        "key.doc.file" : "Sources\/Commandant\/Argument.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 233,
        "key.doc.name" : "Argument",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let defaultValue: T?",
            "key.doc.comment" : "The default value for this argument. This is the value that will be used\n if the argument is never explicitly specified on the command line.\n\n If this is nil, this argument is always required.",
            "key.offset" : 469,
            "key.namelength" : 12,
            "key.doc.line" : 17,
            "key.length" : 12,
            "key.bodyoffset" : 469,
            "key.bodylength" : 0,
            "key.name" : "defaultValue",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 17,
            "key.usr" : "s:vV10Commandant8Argument12defaultValueGSqq__",
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 469,
            "key.doc.name" : "defaultValue",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 17,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: String",
            "key.doc.comment" : "A human-readable string describing the purpose of this argument. This will\n be shown in help messages.",
            "key.bodyoffset" : 611,
            "key.doc.line" : 21,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 21,
            "key.usr" : "s:vV10Commandant8Argument5usageSS",
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 21,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let defaultValue: T?",
            "key.doc.comment" : "The default value for this argument. This is the value that will be used\n if the argument is never explicitly specified on the command line.\n\n If this is nil, this argument is always required.",
            "key.bodyoffset" : 469,
            "key.doc.line" : 17,
            "key.bodylength" : 0,
            "key.name" : "defaultValue",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 17,
            "key.usr" : "s:vV10Commandant8Argument12defaultValueGSqq__",
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "defaultValue",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 17,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: String",
            "key.doc.comment" : "A human-readable string describing the purpose of this argument. This will\n be shown in help messages.",
            "key.offset" : 611,
            "key.namelength" : 5,
            "key.doc.line" : 21,
            "key.length" : 5,
            "key.bodyoffset" : 611,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 21,
            "key.usr" : "s:vV10Commandant8Argument5usageSS",
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 611,
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 21,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public init(defaultValue: T? = nil, usage: String)",
            "key.offset" : 634,
            "key.namelength" : 43,
            "key.doc.line" : 23,
            "key.length" : 43,
            "key.bodyoffset" : 634,
            "key.bodylength" : 103,
            "key.name" : "init(defaultValue:usage:)",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 26,
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.nameoffset" : 634,
            "key.doc.name" : "init(defaultValue:usage:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 23,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "private func invalidUsageError<ClientError>(value: String) -> CommandantError<ClientError>",
            "key.offset" : 754,
            "key.namelength" : 45,
            "key.doc.line" : 28,
            "key.length" : 45,
            "key.bodyoffset" : 754,
            "key.bodylength" : 188,
            "key.name" : "invalidUsageError(_:)",
            "key.doc.column" : 15,
            "key.parsed_scope.end" : 31,
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.nameoffset" : 754,
            "key.doc.name" : "invalidUsageError(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 28,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          }
        ],
        "key.parsed_scope.start" : 12,
        "key.filepath" : "Sources\/Commandant\/Argument.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <|<T : ArgumentType, ClientError>(mode: CommandMode, argument: Argument<T>) -> Result.Result<T, Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Evaluates the given argument in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the argument's `defaultValue` is used.",
        "key.offset" : 1145,
        "key.namelength" : 75,
        "key.doc.line" : 38,
        "key.length" : 75,
        "key.bodyoffset" : 1145,
        "key.bodylength" : 618,
        "key.name" : "<|(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 57,
        "key.usr" : "s:ZF10Commandantoi2lou0_Rq_S_12ArgumentType_FTOS_11CommandModeGVS_8Argumentq___GO6Result6Resultq_GOS_15CommandantErrorq0___",
        "key.doc.file" : "Sources\/Commandant\/Argument.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1145,
        "key.doc.name" : "<|(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <| <T: ArgumentType, ClientError>(mode: CommandMode, argument: Argument<T>) -> Result<T, CommandantError<ClientError>>",
            "key.doc.comment" : "Evaluates the given argument in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the argument's `defaultValue` is used.",
            "key.bodyoffset" : 1149,
            "key.doc.line" : 38,
            "key.bodylength" : 0,
            "key.name" : "T",
            "key.doc.column" : 17,
            "key.parsed_scope.end" : 38,
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "T",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 38,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          }
        ],
        "key.parsed_scope.start" : 38,
        "key.filepath" : "Sources\/Commandant\/Argument.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <|<T : ArgumentType, ClientError>(mode: CommandMode, argument: Argument<[T]>) -> Result.Result<[T], Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Evaluates the given argument list in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the argument's `defaultValue` is used.",
        "key.offset" : 1969,
        "key.namelength" : 77,
        "key.doc.line" : 64,
        "key.length" : 77,
        "key.bodyoffset" : 1969,
        "key.bodylength" : 873,
        "key.name" : "<|(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 95,
        "key.usr" : "s:ZF10Commandantoi2lou0_Rq_S_12ArgumentType_FTOS_11CommandModeGVS_8ArgumentGSaq____GO6Result6ResultGSaq__GOS_15CommandantErrorq0___",
        "key.doc.file" : "Sources\/Commandant\/Argument.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1969,
        "key.doc.name" : "<|(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <| <T: ArgumentType, ClientError>(mode: CommandMode, argument: Argument<[T]>) -> Result<[T], CommandantError<ClientError>>",
            "key.doc.comment" : "Evaluates the given argument list in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the argument's `defaultValue` is used.",
            "key.bodyoffset" : 1973,
            "key.doc.line" : 64,
            "key.bodylength" : 0,
            "key.name" : "T",
            "key.doc.column" : 17,
            "key.parsed_scope.end" : 64,
            "key.doc.file" : "Sources\/Commandant\/Argument.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "T",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 64,
            "key.filepath" : "Sources\/Commandant\/Argument.swift"
          }
        ],
        "key.parsed_scope.start" : 64,
        "key.filepath" : "Sources\/Commandant\/Argument.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 2844,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/HelpCommand.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct HelpCommand<ClientError : ErrorType> : CommandType",
        "key.doc.comment" : "A basic implementation of a `help` command, using information available in a\n`CommandRegistry`.\n\nIf you want to use this command, initialize it with the registry, then add\nit to that same registry:\n\n\tlet commands: CommandRegistry<MyErrorType> = …\n\tlet helpCommand = HelpCommand(registry: commands)\n\tcommands.register(helpCommand)",
        "key.offset" : 565,
        "key.namelength" : 11,
        "key.doc.line" : 21,
        "key.length" : 11,
        "key.bodyoffset" : 565,
        "key.bodylength" : 1151,
        "key.name" : "HelpCommand",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 58,
        "key.usr" : "s:V10Commandant11HelpCommand",
        "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 565,
        "key.doc.name" : "HelpCommand",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let verb = \"help\"",
            "key.offset" : 682,
            "key.namelength" : 4,
            "key.doc.line" : 24,
            "key.length" : 4,
            "key.bodyoffset" : 682,
            "key.bodylength" : 0,
            "key.name" : "verb",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 24,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 682,
            "key.doc.name" : "verb",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 24,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let function = \"Display general or command-specific help\"",
            "key.offset" : 708,
            "key.namelength" : 8,
            "key.doc.line" : 25,
            "key.length" : 8,
            "key.bodyoffset" : 708,
            "key.bodylength" : 0,
            "key.name" : "function",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 25,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 708,
            "key.doc.name" : "function",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 25,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "private let registry: CommandRegistry<ClientError>",
            "key.offset" : 776,
            "key.namelength" : 8,
            "key.doc.line" : 27,
            "key.length" : 8,
            "key.bodyoffset" : 776,
            "key.bodylength" : 0,
            "key.name" : "registry",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 27,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 776,
            "key.doc.name" : "registry",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 27,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public init(registry: CommandRegistry<ClientError>)",
            "key.doc.comment" : "Initializes the command to provide help from the given registry of\n commands.",
            "key.offset" : 911,
            "key.namelength" : 44,
            "key.doc.line" : 31,
            "key.length" : 44,
            "key.bodyoffset" : 911,
            "key.bodylength" : 75,
            "key.name" : "init(registry:)",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 33,
            "key.usr" : "s:FV10Commandant11HelpCommandcuRq_Ss9ErrorType_FMGS0_q__FT8registryGCS_15CommandRegistryq___GS0_q__",
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 911,
            "key.doc.name" : "init(registry:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 31,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public func run(options: Options) -> Result<(), ClientError>",
            "key.offset" : 1002,
            "key.namelength" : 21,
            "key.doc.line" : 35,
            "key.length" : 21,
            "key.bodyoffset" : 1002,
            "key.bodylength" : 712,
            "key.name" : "run(_:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 58,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 1002,
            "key.doc.name" : "run(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 35,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          }
        ],
        "key.parsed_scope.start" : 21,
        "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct HelpOptions<ClientError: ErrorType>: OptionsType",
        "key.offset" : 1733,
        "key.namelength" : 11,
        "key.doc.line" : 61,
        "key.length" : 11,
        "key.bodyoffset" : 1733,
        "key.bodylength" : 449,
        "key.name" : "HelpOptions",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 75,
        "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
        "key.nameoffset" : 1733,
        "key.doc.name" : "HelpOptions",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "private let verb: String?",
            "key.offset" : 1797,
            "key.namelength" : 4,
            "key.doc.line" : 62,
            "key.length" : 4,
            "key.bodyoffset" : 1797,
            "key.bodylength" : 0,
            "key.name" : "verb",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 62,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 1797,
            "key.doc.name" : "verb",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 62,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "private init(verb: String?)",
            "key.offset" : 1822,
            "key.namelength" : 19,
            "key.doc.line" : 64,
            "key.length" : 19,
            "key.bodyoffset" : 1822,
            "key.bodylength" : 42,
            "key.name" : "init(verb:)",
            "key.doc.column" : 10,
            "key.parsed_scope.end" : 66,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 1822,
            "key.doc.name" : "init(verb:)",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 64,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "private static func create(verb: String) -> HelpOptions",
            "key.offset" : 1888,
            "key.namelength" : 20,
            "key.doc.line" : 68,
            "key.length" : 20,
            "key.bodyoffset" : 1888,
            "key.bodylength" : 91,
            "key.name" : "create(_:)",
            "key.doc.column" : 22,
            "key.parsed_scope.end" : 70,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 1888,
            "key.doc.name" : "create(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 68,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "public static func evaluate(m: CommandMode) -> Result<HelpOptions, CommandantError<ClientError>>",
            "key.offset" : 2002,
            "key.namelength" : 24,
            "key.doc.line" : 72,
            "key.length" : 24,
            "key.bodyoffset" : 2002,
            "key.bodylength" : 178,
            "key.name" : "evaluate(_:)",
            "key.doc.column" : 21,
            "key.parsed_scope.end" : 75,
            "key.doc.file" : "Sources\/Commandant\/HelpCommand.swift",
            "key.nameoffset" : 2002,
            "key.doc.name" : "evaluate(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 72,
            "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
          }
        ],
        "key.parsed_scope.start" : 61,
        "key.filepath" : "Sources\/Commandant\/HelpCommand.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 2182,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/ArgumentType.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.parsed_declaration" : "public protocol ArgumentType",
        "key.doc.comment" : "Represents a value that can be converted from a command-line argument.",
        "key.offset" : 231,
        "key.namelength" : 12,
        "key.doc.line" : 10,
        "key.length" : 12,
        "key.bodyoffset" : 231,
        "key.bodylength" : 209,
        "key.name" : "ArgumentType",
        "key.doc.column" : 17,
        "key.parsed_scope.end" : 15,
        "key.usr" : "s:P10Commandant12ArgumentType",
        "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 231,
        "key.doc.name" : "ArgumentType",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.parsed_declaration" : "static var name: String { get }",
            "key.doc.comment" : "A human-readable name for this type.",
            "key.offset" : 300,
            "key.namelength" : 4,
            "key.doc.line" : 12,
            "key.length" : 4,
            "key.bodyoffset" : 300,
            "key.bodylength" : 19,
            "key.name" : "name",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 12,
            "key.usr" : "s:ZvP10Commandant12ArgumentType4nameSS",
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 300,
            "key.doc.name" : "name",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 12,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "static func fromString(string: String) -> Self?",
            "key.doc.comment" : "Attempts to parse a value from the given command-line argument.",
            "key.bodyoffset" : 404,
            "key.doc.line" : 15,
            "key.bodylength" : 0,
            "key.name" : "fromString(_:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 15,
            "key.usr" : "s:ZFP10Commandant12ArgumentType10fromStringuRq_S0__FMq_FSSGSqq__",
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "fromString(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 15,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "static func fromString(string: String) -> Self?",
            "key.doc.comment" : "Attempts to parse a value from the given command-line argument.",
            "key.offset" : 404,
            "key.namelength" : 26,
            "key.doc.line" : 15,
            "key.length" : 26,
            "key.bodyoffset" : 404,
            "key.bodylength" : 0,
            "key.name" : "fromString(_:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 15,
            "key.usr" : "s:ZFP10Commandant12ArgumentType10fromStringuRq_S0__FMq_FSSGSqq__",
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 404,
            "key.doc.name" : "fromString(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 15,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          }
        ],
        "key.parsed_scope.start" : 10,
        "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.offset" : 453,
        "key.namelength" : 3,
        "key.doc.line" : 17,
        "key.length" : 3,
        "key.name" : "Int",
        "key.doc.column" : 2,
        "key.parsed_scope.end" : 0,
        "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
        "key.nameoffset" : 453,
        "key.doc.name" : "Int",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.parsed_declaration" : "public static let name = \"integer\"",
            "key.offset" : 492,
            "key.namelength" : 4,
            "key.doc.line" : 19,
            "key.length" : 4,
            "key.bodyoffset" : 492,
            "key.bodylength" : 0,
            "key.name" : "name",
            "key.doc.column" : 20,
            "key.parsed_scope.end" : 19,
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.nameoffset" : 492,
            "key.doc.name" : "name",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 19,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "public static func fromString(string: String) -> Int?",
            "key.offset" : 530,
            "key.namelength" : 26,
            "key.doc.line" : 21,
            "key.length" : 26,
            "key.bodyoffset" : 530,
            "key.bodylength" : 59,
            "key.name" : "fromString(_:)",
            "key.doc.column" : 21,
            "key.parsed_scope.end" : 23,
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.nameoffset" : 530,
            "key.doc.name" : "fromString(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 21,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.offset" : 604,
        "key.namelength" : 6,
        "key.doc.line" : 25,
        "key.length" : 6,
        "key.name" : "String",
        "key.doc.column" : 2,
        "key.parsed_scope.end" : 0,
        "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
        "key.nameoffset" : 604,
        "key.doc.name" : "String",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.parsed_declaration" : "public static let name = \"string\"",
            "key.offset" : 646,
            "key.namelength" : 4,
            "key.doc.line" : 27,
            "key.length" : 4,
            "key.bodyoffset" : 646,
            "key.bodylength" : 0,
            "key.name" : "name",
            "key.doc.column" : 20,
            "key.parsed_scope.end" : 27,
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.nameoffset" : 646,
            "key.doc.name" : "name",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 27,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "public static func fromString(string: String) -> String?",
            "key.offset" : 683,
            "key.namelength" : 26,
            "key.doc.line" : 29,
            "key.length" : 26,
            "key.bodyoffset" : 683,
            "key.bodylength" : 57,
            "key.name" : "fromString(_:)",
            "key.doc.column" : 21,
            "key.parsed_scope.end" : 31,
            "key.doc.file" : "Sources\/Commandant\/ArgumentType.swift",
            "key.nameoffset" : 683,
            "key.doc.name" : "fromString(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 29,
            "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/ArgumentType.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 744,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/Option.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.parsed_declaration" : "public protocol OptionsType",
        "key.doc.comment" : "Represents a record of options for a command, which can be parsed from\na list of command-line arguments.\n\nThis is most helpful when used in conjunction with the `Option` and `Switch`\ntypes, and `<*>` and `<|` combinators.\n\nExample:\n\n\tstruct LogOptions: OptionsType {\n\t\tlet verbosity: Int\n\t\tlet outputFilename: String\n\t\tlet logName: String\n\n\t\tstatic func create(verbosity: Int)(outputFilename: String)(logName: String) -> LogOptions {\n\t\t\treturn LogOptions(verbosity: verbosity, outputFilename: outputFilename, logName: logName)\n\t\t}\n\n\t\tstatic func evaluate(m: CommandMode) -> Result<LogOptions, CommandantError<YourErrorType>> {\n\t\t\treturn create\n\t\t\t\t<*> m <| Option(key: \"verbose\", defaultValue: 0, usage: \"the verbosity level with which to read the logs\")\n\t\t\t\t<*> m <| Option(key: \"outputFilename\", defaultValue: \"\", usage: \"a file to print output to, instead of stdout\")\n\t\t\t\t<*> m <| Switch(flag: \"d\", key: \"delete\", defaultValue: false, usage: \"delete the logs when finished\")\n\t\t\t\t<*> m <| Option(usage: \"the log to read\")\n\t\t}\n\t}",
        "key.offset" : 1322,
        "key.namelength" : 11,
        "key.doc.line" : 37,
        "key.length" : 11,
        "key.bodyoffset" : 1322,
        "key.bodylength" : 243,
        "key.name" : "OptionsType",
        "key.doc.column" : 17,
        "key.parsed_scope.end" : 43,
        "key.usr" : "s:P10Commandant11OptionsType",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1322,
        "key.doc.name" : "OptionsType",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "static func evaluate(m: CommandMode) -> Result.Result<Self, Commandant.CommandantError<Self.ClientError>>",
            "key.doc.comment" : "Evaluates this set of options in the given mode.\n\n Returns the parsed options or a `UsageError`.",
            "key.offset" : 1494,
            "key.namelength" : 24,
            "key.doc.line" : 43,
            "key.length" : 24,
            "key.bodyoffset" : 1494,
            "key.bodylength" : 0,
            "key.name" : "evaluate(_:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 43,
            "key.usr" : "s:ZFP10Commandant11OptionsType8evaluateuRq_S0__FMq_FOS_11CommandModeGO6Result6Resultq_GOS_15CommandantErrorqq_S0_11ClientError__",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 1494,
            "key.doc.name" : "evaluate(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 43,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "static func evaluate(m: CommandMode) -> Result.Result<Self, Commandant.CommandantError<Self.ClientError>>",
            "key.doc.comment" : "Evaluates this set of options in the given mode.\n\n Returns the parsed options or a `UsageError`.",
            "key.bodyoffset" : 1494,
            "key.doc.line" : 43,
            "key.bodylength" : 0,
            "key.name" : "evaluate(_:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 43,
            "key.usr" : "s:ZFP10Commandant11OptionsType8evaluateuRq_S0__FMq_FOS_11CommandModeGO6Result6Resultq_GOS_15CommandantErrorqq_S0_11ClientError__",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "evaluate(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 43,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 37,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct NoOptions<ClientError : ErrorType> : OptionsType",
        "key.doc.comment" : "An `OptionsType` that has no options.",
        "key.offset" : 1624,
        "key.namelength" : 9,
        "key.doc.line" : 47,
        "key.length" : 9,
        "key.bodyoffset" : 1624,
        "key.bodylength" : 202,
        "key.name" : "NoOptions",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 52,
        "key.usr" : "s:V10Commandant9NoOptions",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1624,
        "key.doc.name" : "NoOptions",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "private init() {}",
            "key.offset" : 1682,
            "key.namelength" : 6,
            "key.doc.line" : 48,
            "key.length" : 6,
            "key.bodyoffset" : 1682,
            "key.bodylength" : 8,
            "key.name" : "init()",
            "key.doc.column" : 10,
            "key.parsed_scope.end" : 48,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.nameoffset" : 1682,
            "key.doc.name" : "init()",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 48,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.parsed_declaration" : "public static func evaluate(m: CommandMode) -> Result<NoOptions, CommandantError<ClientError>>",
            "key.offset" : 1714,
            "key.namelength" : 24,
            "key.doc.line" : 50,
            "key.length" : 24,
            "key.bodyoffset" : 1714,
            "key.bodylength" : 110,
            "key.name" : "evaluate(_:)",
            "key.doc.column" : 21,
            "key.parsed_scope.end" : 52,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.nameoffset" : 1714,
            "key.doc.name" : "evaluate(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 50,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 47,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct Option<T>",
        "key.doc.comment" : "Describes an option that can be provided on the command line.",
        "key.offset" : 1909,
        "key.namelength" : 6,
        "key.doc.line" : 56,
        "key.length" : 6,
        "key.bodyoffset" : 1909,
        "key.bodylength" : 1223,
        "key.name" : "Option",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 86,
        "key.usr" : "s:V10Commandant6Option",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1909,
        "key.doc.name" : "Option",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let key: String",
            "key.doc.comment" : "The key that controls this option. For example, a key of `verbose` would\n be used for a `--verbose` option.",
            "key.offset" : 2050,
            "key.namelength" : 3,
            "key.doc.line" : 59,
            "key.length" : 3,
            "key.bodyoffset" : 2050,
            "key.bodylength" : 0,
            "key.name" : "key",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 59,
            "key.usr" : "s:vV10Commandant6Option3keySS",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2050,
            "key.doc.name" : "key",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 59,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let defaultValue: T?",
            "key.doc.comment" : "The default value for this option. This is the value that will be used\n if the option is never explicitly specified on the command line.\n\n If this is nil, this option is always required.",
            "key.bodyoffset" : 2279,
            "key.doc.line" : 65,
            "key.bodylength" : 0,
            "key.name" : "defaultValue",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 65,
            "key.usr" : "s:vV10Commandant6Option12defaultValueGSqq__",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "defaultValue",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 65,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: String",
            "key.doc.comment" : "A human-readable string describing the purpose of this option. This will\n be shown in help messages.\n\n For boolean operations, this should describe the effect of _not_ using\n the default value (i.e., what will happen if you disable\/enable the flag\n differently from the default).",
            "key.bodyoffset" : 2614,
            "key.doc.line" : 73,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 73,
            "key.usr" : "s:vV10Commandant6Option5usageSS",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 73,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let key: String",
            "key.doc.comment" : "The key that controls this option. For example, a key of `verbose` would\n be used for a `--verbose` option.",
            "key.bodyoffset" : 2050,
            "key.doc.line" : 59,
            "key.bodylength" : 0,
            "key.name" : "key",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 59,
            "key.usr" : "s:vV10Commandant6Option3keySS",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "key",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 59,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let defaultValue: T?",
            "key.doc.comment" : "The default value for this option. This is the value that will be used\n if the option is never explicitly specified on the command line.\n\n If this is nil, this option is always required.",
            "key.offset" : 2279,
            "key.namelength" : 12,
            "key.doc.line" : 65,
            "key.length" : 12,
            "key.bodyoffset" : 2279,
            "key.bodylength" : 0,
            "key.name" : "defaultValue",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 65,
            "key.usr" : "s:vV10Commandant6Option12defaultValueGSqq__",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2279,
            "key.doc.name" : "defaultValue",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 65,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: String",
            "key.doc.comment" : "A human-readable string describing the purpose of this option. This will\n be shown in help messages.\n\n For boolean operations, this should describe the effect of _not_ using\n the default value (i.e., what will happen if you disable\/enable the flag\n differently from the default).",
            "key.offset" : 2614,
            "key.namelength" : 5,
            "key.doc.line" : 73,
            "key.length" : 5,
            "key.bodyoffset" : 2614,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 73,
            "key.usr" : "s:vV10Commandant6Option5usageSS",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2614,
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 73,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public init(key: String, defaultValue: T? = nil, usage: String)",
            "key.offset" : 2637,
            "key.namelength" : 56,
            "key.doc.line" : 75,
            "key.length" : 56,
            "key.bodyoffset" : 2637,
            "key.bodylength" : 133,
            "key.name" : "init(key:defaultValue:usage:)",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 79,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.nameoffset" : 2637,
            "key.doc.name" : "init(key:defaultValue:usage:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 75,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "private func invalidUsageError<ClientError>(value: String) -> Commandant.CommandantError<ClientError>",
            "key.doc.comment" : "Constructs an `InvalidArgument` error that describes how the option was\n used incorrectly. `value` should be the invalid value given by the user.",
            "key.offset" : 2942,
            "key.namelength" : 45,
            "key.doc.line" : 83,
            "key.length" : 45,
            "key.bodyoffset" : 2942,
            "key.bodylength" : 188,
            "key.name" : "invalidUsageError(_:)",
            "key.doc.column" : 15,
            "key.parsed_scope.end" : 86,
            "key.usr" : "s:FV10Commandant6OptionP33_4F8DF2BC794A725A9EB7CCE887709D3217invalidUsageErroru__rFGS0_q__FSSGOS_15CommandantErrorqd___",
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2942,
            "key.doc.name" : "invalidUsageError(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 83,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 56,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.parsed_declaration" : "public struct Option<T>",
        "key.doc.comment" : "Describes an option that can be provided on the command line.",
        "key.offset" : 3145,
        "key.namelength" : 6,
        "key.doc.line" : 56,
        "key.length" : 6,
        "key.name" : "Option",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 0,
        "key.usr" : "s:V10Commandant6Option",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 3145,
        "key.doc.name" : "Option",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public var description: String",
            "key.offset" : 3191,
            "key.namelength" : 11,
            "key.doc.line" : 90,
            "key.length" : 11,
            "key.bodyoffset" : 3191,
            "key.bodylength" : 43,
            "key.name" : "description",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 92,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.nameoffset" : 3191,
            "key.doc.name" : "description",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 90,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <*><T, U, ClientError>(f: T -> U, value: Result<T, CommandantError<ClientError>>) -> Result.Result<U, Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Applies `f` to the value in the given result.\n\nIn the context of command-line option parsing, this is used to chain\ntogether the parsing of multiple arguments. See OptionsType for an example.",
        "key.offset" : 4729,
        "key.namelength" : 82,
        "key.doc.line" : 134,
        "key.length" : 82,
        "key.bodyoffset" : 4729,
        "key.bodylength" : 149,
        "key.name" : "<*>(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 135,
        "key.usr" : "s:ZF10Commandantoi3lmgu1_rFTFq_q0_GO6Result6Resultq_GOS_15CommandantErrorq1____GS1_q0_GS2_q1___",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 4729,
        "key.doc.name" : "<*>(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <*> <T, U, ClientError>(f: T -> U, value: Result<T, CommandantError<ClientError>>) -> Result<U, CommandantError<ClientError>>",
            "key.doc.comment" : "Applies `f` to the value in the given result.\n\nIn the context of command-line option parsing, this is used to chain\ntogether the parsing of multiple arguments. See OptionsType for an example.",
            "key.bodyoffset" : 4734,
            "key.doc.line" : 134,
            "key.bodylength" : 0,
            "key.name" : "T",
            "key.doc.column" : 18,
            "key.parsed_scope.end" : 134,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "T",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 134,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 134,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <*><T, U, ClientError>(f: Result<(T -> U), CommandantError<ClientError>>, value: Result<T, CommandantError<ClientError>>) -> Result.Result<U, Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Applies the function in `f` to the value in the given result.\n\nIn the context of command-line option parsing, this is used to chain\ntogether the parsing of multiple arguments. See OptionsType for an example.",
        "key.offset" : 5116,
        "key.namelength" : 122,
        "key.doc.line" : 142,
        "key.length" : 122,
        "key.bodyoffset" : 5116,
        "key.bodylength" : 513,
        "key.name" : "<*>(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 156,
        "key.usr" : "s:ZF10Commandantoi3lmgu1_rFTGO6Result6ResultFq_q0_GOS_15CommandantErrorq1___GS1_q_GS2_q1____GS1_q0_GS2_q1___",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 5116,
        "key.doc.name" : "<*>(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <*> <T, U, ClientError>(f: Result<(T -> U), CommandantError<ClientError>>, value: Result<T, CommandantError<ClientError>>) -> Result<U, CommandantError<ClientError>>",
            "key.doc.comment" : "Applies the function in `f` to the value in the given result.\n\nIn the context of command-line option parsing, this is used to chain\ntogether the parsing of multiple arguments. See OptionsType for an example.",
            "key.bodyoffset" : 5121,
            "key.doc.line" : 142,
            "key.bodylength" : 0,
            "key.name" : "T",
            "key.doc.column" : 18,
            "key.parsed_scope.end" : 142,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "T",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 142,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 142,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <|<T : ArgumentType, ClientError>(mode: CommandMode, option: Option<T>) -> Result.Result<T, Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Evaluates the given option in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the option's `defaultValue` is used.",
        "key.offset" : 5826,
        "key.namelength" : 71,
        "key.doc.line" : 163,
        "key.length" : 71,
        "key.bodyoffset" : 5826,
        "key.bodylength" : 960,
        "key.name" : "<|(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 195,
        "key.usr" : "s:ZF10Commandantoi2lou0_Rq_S_12ArgumentType_FTOS_11CommandModeGVS_6Optionq___GO6Result6Resultq_GOS_15CommandantErrorq0___",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 5826,
        "key.doc.name" : "<|(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <| <T: ArgumentType, ClientError>(mode: CommandMode, option: Option<T>) -> Result<T, CommandantError<ClientError>>",
            "key.doc.comment" : "Evaluates the given option in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the option's `defaultValue` is used.",
            "key.bodyoffset" : 5830,
            "key.doc.line" : 163,
            "key.bodylength" : 0,
            "key.name" : "T",
            "key.doc.column" : 17,
            "key.parsed_scope.end" : 163,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "T",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 163,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 163,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <|<ClientError>(mode: CommandMode, option: Option<Bool>) -> Result.Result<Bool, Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Evaluates the given boolean option in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the option's `defaultValue` is used.",
        "key.offset" : 6991,
        "key.namelength" : 57,
        "key.doc.line" : 202,
        "key.length" : 57,
        "key.bodyoffset" : 6991,
        "key.bodylength" : 468,
        "key.name" : "<|(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 215,
        "key.usr" : "s:ZF10Commandantoi2lourFTOS_11CommandModeGVS_6OptionSb__GO6Result6ResultSbGOS_15CommandantErrorq___",
        "key.doc.file" : "Sources\/Commandant\/Option.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 6991,
        "key.doc.name" : "<|(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <| <ClientError>(mode: CommandMode, option: Option<Bool>) -> Result<Bool, CommandantError<ClientError>>",
            "key.doc.comment" : "Evaluates the given boolean option in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the option's `defaultValue` is used.",
            "key.bodyoffset" : 6995,
            "key.doc.line" : 202,
            "key.bodylength" : 0,
            "key.name" : "ClientError",
            "key.doc.column" : 17,
            "key.parsed_scope.end" : 202,
            "key.doc.file" : "Sources\/Commandant\/Option.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "ClientError",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 202,
            "key.filepath" : "Sources\/Commandant\/Option.swift"
          }
        ],
        "key.parsed_scope.start" : 202,
        "key.filepath" : "Sources\/Commandant\/Option.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 7461,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/Errors.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.enum",
        "key.parsed_declaration" : "public enum CommandantError<ClientError> : ErrorType",
        "key.doc.comment" : "Possible errors that can originate from Commandant.\n\n`ClientError` should be the type of error (if any) that can occur when\nrunning commands.",
        "key.offset" : 349,
        "key.namelength" : 15,
        "key.doc.line" : 16,
        "key.length" : 15,
        "key.bodyoffset" : 349,
        "key.bodylength" : 198,
        "key.name" : "CommandantError",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 21,
        "key.usr" : "s:O10Commandant15CommandantError",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 349,
        "key.doc.name" : "CommandantError",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "An option was used incorrectly.",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 18,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/Errors.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "An option was used incorrectly.",
                "key.offset" : 434,
                "key.namelength" : 10,
                "key.doc.line" : 18,
                "key.length" : 10,
                "key.bodyoffset" : 434,
                "key.bodylength" : 0,
                "key.name" : "UsageError",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 18,
                "key.usr" : "s:FO10Commandant15CommandantError10UsageErrorurFMGS0_q__FT11descriptionSS_GS0_q__",
                "key.doc.file" : "Sources\/Commandant\/Errors.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 434,
                "key.doc.name" : "UsageError",
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.parsed_scope.start" : 18,
                "key.filepath" : "Sources\/Commandant\/Errors.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/Errors.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "An error occurred while running a command.",
            "key.bodyoffset" : 521,
            "key.doc.line" : 21,
            "key.bodylength" : 0,
            "key.name" : "CommandError",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 21,
            "key.usr" : "s:FO10Commandant15CommandantError12CommandErrorurFMGS0_q__Fq_GS0_q__",
            "key.doc.file" : "Sources\/Commandant\/Errors.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "CommandError",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 21,
            "key.filepath" : "Sources\/Commandant\/Errors.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "An option was used incorrectly.",
            "key.bodyoffset" : 434,
            "key.doc.line" : 18,
            "key.bodylength" : 0,
            "key.name" : "UsageError",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 18,
            "key.usr" : "s:FO10Commandant15CommandantError10UsageErrorurFMGS0_q__FT11descriptionSS_GS0_q__",
            "key.doc.file" : "Sources\/Commandant\/Errors.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "UsageError",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 18,
            "key.filepath" : "Sources\/Commandant\/Errors.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "An error occurred while running a command.",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 21,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/Errors.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "An error occurred while running a command.",
                "key.offset" : 521,
                "key.namelength" : 12,
                "key.doc.line" : 21,
                "key.length" : 12,
                "key.bodyoffset" : 521,
                "key.bodylength" : 0,
                "key.name" : "CommandError",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 21,
                "key.usr" : "s:FO10Commandant15CommandantError12CommandErrorurFMGS0_q__Fq_GS0_q__",
                "key.doc.file" : "Sources\/Commandant\/Errors.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 521,
                "key.doc.name" : "CommandError",
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.parsed_scope.start" : 21,
                "key.filepath" : "Sources\/Commandant\/Errors.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/Errors.swift"
          }
        ],
        "key.parsed_scope.start" : 16,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.parsed_declaration" : "public enum CommandantError<ClientError> : ErrorType",
        "key.doc.comment" : "Possible errors that can originate from Commandant.\n\n`ClientError` should be the type of error (if any) that can occur when\nrunning commands.",
        "key.offset" : 560,
        "key.namelength" : 15,
        "key.doc.line" : 16,
        "key.length" : 15,
        "key.name" : "CommandantError",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 0,
        "key.usr" : "s:O10Commandant15CommandantError",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 560,
        "key.doc.name" : "CommandantError",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public var description: String",
            "key.offset" : 615,
            "key.namelength" : 11,
            "key.doc.line" : 25,
            "key.length" : 11,
            "key.bodyoffset" : 615,
            "key.bodylength" : 160,
            "key.name" : "description",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 33,
            "key.doc.file" : "Sources\/Commandant\/Errors.swift",
            "key.nameoffset" : 615,
            "key.doc.name" : "description",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 25,
            "key.filepath" : "Sources\/Commandant\/Errors.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func missingArgumentError<ClientError>(argumentName: String) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an `InvalidArgument` error that indicates a missing value for\nthe argument by the given name.",
        "key.offset" : 907,
        "key.namelength" : 55,
        "key.doc.line" : 38,
        "key.length" : 55,
        "key.bodyoffset" : 907,
        "key.bodylength" : 194,
        "key.name" : "missingArgumentError(_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 40,
        "key.usr" : "s:F10Commandant20missingArgumentErrorurFSSGOS_15CommandantErrorq__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 907,
        "key.doc.name" : "missingArgumentError(_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 38,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<ClientError>(keyValueExample: String, usage: String) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error by combining the example of key (and value, if applicable)\nwith the usage description.",
        "key.offset" : 1233,
        "key.namelength" : 74,
        "key.doc.line" : 45,
        "key.length" : 74,
        "key.bodyoffset" : 1233,
        "key.bodylength" : 327,
        "key.name" : "informativeUsageError(_:usage:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 50,
        "key.usr" : "s:F10Commandant21informativeUsageErrorurFTSS5usageSS_GOS_15CommandantErrorq__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1233,
        "key.doc.name" : "informativeUsageError(_:usage:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 45,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func combineUsageErrors<ClientError>(lhs: CommandantError<ClientError>, _ rhs: CommandantError<ClientError>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Combines the text of the two errors, if they're both `UsageError`s.\nOtherwise, uses whichever one is not (biased toward the left).",
        "key.offset" : 1716,
        "key.namelength" : 103,
        "key.doc.line" : 55,
        "key.length" : 103,
        "key.bodyoffset" : 1716,
        "key.bodylength" : 402,
        "key.name" : "combineUsageErrors(_:_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 66,
        "key.usr" : "s:F10Commandant18combineUsageErrorsurFTGOS_15CommandantErrorq__GS0_q___GS0_q__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1716,
        "key.doc.name" : "combineUsageErrors(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 55,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func unrecognizedArgumentsError<ClientError>(options: [String]) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that indicates unrecognized arguments remains.",
        "key.offset" : 2206,
        "key.namelength" : 58,
        "key.doc.line" : 70,
        "key.length" : 58,
        "key.bodyoffset" : 2206,
        "key.bodylength" : 188,
        "key.name" : "unrecognizedArgumentsError(_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 71,
        "key.usr" : "s:F10Commandant26unrecognizedArgumentsErrorurFGSaSS_GOS_15CommandantErrorq__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 2206,
        "key.doc.name" : "unrecognizedArgumentsError(_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 70,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<T, ClientError>(valueExample: String, argument: Argument<T>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that describes how to use the argument, with the given\nexample of value usage if applicable.",
        "key.offset" : 2551,
        "key.namelength" : 82,
        "key.doc.line" : 78,
        "key.length" : 82,
        "key.bodyoffset" : 2551,
        "key.bodylength" : 308,
        "key.name" : "informativeUsageError(_:argument:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 83,
        "key.usr" : "s:F10Commandant21informativeUsageErroru0_rFTSS8argumentGVS_8Argumentq___GOS_15CommandantErrorq0__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 2551,
        "key.doc.name" : "informativeUsageError(_:argument:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 78,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<T : ArgumentType, ClientError>(argument: Argument<T>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that describes how to use the argument.",
        "key.offset" : 2940,
        "key.namelength" : 74,
        "key.doc.line" : 87,
        "key.length" : 74,
        "key.bodyoffset" : 2940,
        "key.bodylength" : 390,
        "key.name" : "informativeUsageError(_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 101,
        "key.usr" : "s:F10Commandant21informativeUsageErroru0_Rq_S_12ArgumentType_FGVS_8Argumentq__GOS_15CommandantErrorq0__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 2940,
        "key.doc.name" : "informativeUsageError(_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 87,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<T : ArgumentType, ClientError>(argument: Argument<[T]>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that describes how to use the argument list.",
        "key.offset" : 3416,
        "key.namelength" : 76,
        "key.doc.line" : 105,
        "key.length" : 76,
        "key.bodyoffset" : 3416,
        "key.bodylength" : 392,
        "key.name" : "informativeUsageError(_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 119,
        "key.usr" : "s:F10Commandant21informativeUsageErroru0_Rq_S_12ArgumentType_FGVS_8ArgumentGSaq___GOS_15CommandantErrorq0__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 3416,
        "key.doc.name" : "informativeUsageError(_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 105,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<T, ClientError>(keyValueExample: String, option: Option<T>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that describes how to use the option, with the given\nexample of key (and value, if applicable) usage.",
        "key.offset" : 3972,
        "key.namelength" : 81,
        "key.doc.line" : 126,
        "key.length" : 81,
        "key.bodyoffset" : 3972,
        "key.bodylength" : 307,
        "key.name" : "informativeUsageError(_:option:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 131,
        "key.usr" : "s:F10Commandant21informativeUsageErroru0_rFTSS6optionGVS_6Optionq___GOS_15CommandantErrorq0__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 3972,
        "key.doc.name" : "informativeUsageError(_:option:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 126,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<T : ArgumentType, ClientError>(option: Option<T>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that describes how to use the option.",
        "key.offset" : 4358,
        "key.namelength" : 70,
        "key.doc.line" : 135,
        "key.length" : 70,
        "key.bodyoffset" : 4358,
        "key.bodylength" : 396,
        "key.name" : "informativeUsageError(_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 149,
        "key.usr" : "s:F10Commandant21informativeUsageErroru0_Rq_S_12ArgumentType_FGVS_6Optionq__GOS_15CommandantErrorq0__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 4358,
        "key.doc.name" : "informativeUsageError(_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 135,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "internal func informativeUsageError<ClientError>(option: Option<Bool>) -> Commandant.CommandantError<ClientError>",
        "key.doc.comment" : "Constructs an error that describes how to use the given boolean option.",
        "key.offset" : 4847,
        "key.namelength" : 56,
        "key.doc.line" : 153,
        "key.length" : 56,
        "key.bodyoffset" : 4847,
        "key.bodylength" : 328,
        "key.name" : "informativeUsageError(_:)",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 160,
        "key.usr" : "s:F10Commandant21informativeUsageErrorurFGVS_6OptionSb_GOS_15CommandantErrorq__",
        "key.doc.file" : "Sources\/Commandant\/Errors.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 4847,
        "key.doc.name" : "informativeUsageError(_:)",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.parsed_scope.start" : 153,
        "key.filepath" : "Sources\/Commandant\/Errors.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 5177,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/Switch.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct Switch",
        "key.doc.comment" : "Describes a parameterless command line flag that defaults to false and can only\nbe switched on. Canonical examples include `--force` and `--recurse`.\n\nFor a boolean toggle that can be enabled and disabled use `Option<Bool>`.",
        "key.offset" : 404,
        "key.namelength" : 6,
        "key.doc.line" : 15,
        "key.length" : 6,
        "key.bodyoffset" : 404,
        "key.bodylength" : 732,
        "key.name" : "Switch",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 35,
        "key.usr" : "s:V10Commandant6Switch",
        "key.doc.file" : "Sources\/Commandant\/Switch.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 404,
        "key.doc.name" : "Switch",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let key: String",
            "key.doc.comment" : "The key that enables this switch. For example, a key of `verbose` would be\n used for a `--verbose` option.",
            "key.offset" : 541,
            "key.namelength" : 3,
            "key.doc.line" : 18,
            "key.length" : 3,
            "key.bodyoffset" : 541,
            "key.bodylength" : 0,
            "key.name" : "key",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 18,
            "key.usr" : "s:vV10Commandant6Switch3keySS",
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 541,
            "key.doc.name" : "key",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 18,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let flag: Character?",
            "key.doc.comment" : "Optional single letter flag that enables this switch. For example, `-v` would\n be used as a shorthand for `--verbose`.\n\n Multiple flags can be grouped together as a single argument and will split\n when parsing (e.g. `rm -rf` treats 'r' and 'f' as inidividual flags).",
            "key.bodyoffset" : 854,
            "key.doc.line" : 25,
            "key.bodylength" : 0,
            "key.name" : "flag",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 25,
            "key.usr" : "s:vV10Commandant6Switch4flagGSqVSs9Character_",
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "flag",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 25,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: String",
            "key.doc.comment" : "A human-readable string describing the purpose of this option. This will\n be shown in help messages.",
            "key.bodyoffset" : 994,
            "key.doc.line" : 29,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 29,
            "key.usr" : "s:vV10Commandant6Switch5usageSS",
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 29,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let key: String",
            "key.doc.comment" : "The key that enables this switch. For example, a key of `verbose` would be\n used for a `--verbose` option.",
            "key.bodyoffset" : 541,
            "key.doc.line" : 18,
            "key.bodylength" : 0,
            "key.name" : "key",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 18,
            "key.usr" : "s:vV10Commandant6Switch3keySS",
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "key",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 18,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let flag: Character?",
            "key.doc.comment" : "Optional single letter flag that enables this switch. For example, `-v` would\n be used as a shorthand for `--verbose`.\n\n Multiple flags can be grouped together as a single argument and will split\n when parsing (e.g. `rm -rf` treats 'r' and 'f' as inidividual flags).",
            "key.offset" : 854,
            "key.namelength" : 4,
            "key.doc.line" : 25,
            "key.length" : 4,
            "key.bodyoffset" : 854,
            "key.bodylength" : 0,
            "key.name" : "flag",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 25,
            "key.usr" : "s:vV10Commandant6Switch4flagGSqVSs9Character_",
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 854,
            "key.doc.name" : "flag",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 25,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: String",
            "key.doc.comment" : "A human-readable string describing the purpose of this option. This will\n be shown in help messages.",
            "key.offset" : 994,
            "key.namelength" : 5,
            "key.doc.line" : 29,
            "key.length" : 5,
            "key.bodyoffset" : 994,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 29,
            "key.usr" : "s:vV10Commandant6Switch5usageSS",
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 994,
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 29,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public init(flag: Character? = nil, key: String, usage: String)",
            "key.offset" : 1017,
            "key.namelength" : 56,
            "key.doc.line" : 31,
            "key.length" : 56,
            "key.bodyoffset" : 1017,
            "key.bodylength" : 117,
            "key.name" : "init(flag:key:usage:)",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 35,
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.nameoffset" : 1017,
            "key.doc.name" : "init(flag:key:usage:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 31,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          }
        ],
        "key.parsed_scope.start" : 15,
        "key.filepath" : "Sources\/Commandant\/Switch.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.parsed_declaration" : "public struct Switch",
        "key.doc.comment" : "Describes a parameterless command line flag that defaults to false and can only\nbe switched on. Canonical examples include `--force` and `--recurse`.\n\nFor a boolean toggle that can be enabled and disabled use `Option<Bool>`.",
        "key.offset" : 1149,
        "key.namelength" : 6,
        "key.doc.line" : 15,
        "key.length" : 6,
        "key.name" : "Switch",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 0,
        "key.usr" : "s:V10Commandant6Switch",
        "key.doc.file" : "Sources\/Commandant\/Switch.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1149,
        "key.doc.name" : "Switch",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public var description: String",
            "key.offset" : 1195,
            "key.namelength" : 11,
            "key.doc.line" : 39,
            "key.length" : 11,
            "key.bodyoffset" : 1195,
            "key.bodylength" : 125,
            "key.name" : "description",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 45,
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.nameoffset" : 1195,
            "key.doc.name" : "description",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 39,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/Switch.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "public func <|<ClientError>(mode: CommandMode, option: Switch) -> Result.Result<Bool, Commandant.CommandantError<ClientError>>",
        "key.doc.comment" : "Evaluates the given boolean switch in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the option's `defaultValue` is used.",
        "key.offset" : 1527,
        "key.namelength" : 52,
        "key.doc.line" : 52,
        "key.length" : 52,
        "key.bodyoffset" : 1527,
        "key.bodylength" : 407,
        "key.name" : "<|(_:_:)",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 63,
        "key.usr" : "s:ZF10Commandantoi2lourFTOS_11CommandModeVS_6Switch_GO6Result6ResultSbGOS_15CommandantErrorq___",
        "key.doc.file" : "Sources\/Commandant\/Switch.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1527,
        "key.doc.name" : "<|(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.parsed_declaration" : "public func <| <ClientError> (mode: CommandMode, option: Switch) -> Result<Bool, CommandantError<ClientError>>",
            "key.doc.comment" : "Evaluates the given boolean switch in the given mode.\n\nIf parsing command line arguments, and no value was specified on the command\nline, the option's `defaultValue` is used.",
            "key.bodyoffset" : 1531,
            "key.doc.line" : 52,
            "key.bodylength" : 0,
            "key.name" : "ClientError",
            "key.doc.column" : 17,
            "key.parsed_scope.end" : 52,
            "key.doc.file" : "Sources\/Commandant\/Switch.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "ClientError",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 52,
            "key.filepath" : "Sources\/Commandant\/Switch.swift"
          }
        ],
        "key.parsed_scope.start" : 52,
        "key.filepath" : "Sources\/Commandant\/Switch.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 1936,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/Command.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.parsed_declaration" : "public protocol CommandType",
        "key.doc.comment" : "Represents a subcommand that can be executed with its own set of arguments.",
        "key.offset" : 277,
        "key.namelength" : 11,
        "key.doc.line" : 13,
        "key.length" : 11,
        "key.bodyoffset" : 277,
        "key.bodylength" : 474,
        "key.name" : "CommandType",
        "key.doc.column" : 17,
        "key.parsed_scope.end" : 29,
        "key.usr" : "s:P10Commandant11CommandType",
        "key.doc.file" : "Sources\/Commandant\/Command.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 277,
        "key.doc.name" : "CommandType",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "var verb: String { get }",
            "key.doc.comment" : "The action that users should specify to use this subcommand (e.g.,\n `help`).",
            "key.offset" : 508,
            "key.namelength" : 4,
            "key.doc.line" : 22,
            "key.length" : 4,
            "key.bodyoffset" : 508,
            "key.bodylength" : 19,
            "key.name" : "verb",
            "key.doc.column" : 6,
            "key.parsed_scope.end" : 22,
            "key.usr" : "s:vP10Commandant11CommandType4verbSS",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 508,
            "key.doc.name" : "verb",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 22,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "func run(options: Options) -> Result.Result<(), Self.ClientError>",
            "key.doc.comment" : "Runs this subcommand with the given options.",
            "key.bodyoffset" : 702,
            "key.doc.line" : 29,
            "key.bodylength" : 0,
            "key.name" : "run(_:)",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 29,
            "key.usr" : "s:FP10Commandant11CommandType3runuRq_S0__Fq_Fqq_S0_7OptionsGO6Result6ResultT_qq_S0_11ClientError_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "run(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 29,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.parsed_declaration" : "typealias Options : OptionsType",
            "key.doc.comment" : "The command's options type.",
            "key.bodyoffset" : 337,
            "key.doc.line" : 16,
            "key.bodylength" : 0,
            "key.name" : "Options",
            "key.doc.column" : 12,
            "key.parsed_scope.end" : 16,
            "key.usr" : "s:P10Commandant11CommandType7Options",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "Options",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 16,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "var function: String { get }",
            "key.doc.comment" : "A human-readable, high-level description of what this command is used\n for.",
            "key.offset" : 620,
            "key.namelength" : 8,
            "key.doc.line" : 26,
            "key.length" : 8,
            "key.bodyoffset" : 620,
            "key.bodylength" : 23,
            "key.name" : "function",
            "key.doc.column" : 6,
            "key.parsed_scope.end" : 26,
            "key.usr" : "s:vP10Commandant11CommandType8functionSS",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 620,
            "key.doc.name" : "function",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 26,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "func run(options: Options) -> Result.Result<(), Self.ClientError>",
            "key.doc.comment" : "Runs this subcommand with the given options.",
            "key.offset" : 702,
            "key.namelength" : 21,
            "key.doc.line" : 29,
            "key.length" : 21,
            "key.bodyoffset" : 702,
            "key.bodylength" : 0,
            "key.name" : "run(_:)",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 29,
            "key.usr" : "s:FP10Commandant11CommandType3runuRq_S0__Fq_Fqq_S0_7OptionsGO6Result6ResultT_qq_S0_11ClientError_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 702,
            "key.doc.name" : "run(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 29,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          }
        ],
        "key.parsed_scope.start" : 13,
        "key.filepath" : "Sources\/Commandant\/Command.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.struct",
        "key.parsed_declaration" : "public struct CommandWrapper<ClientError : ErrorType>",
        "key.doc.comment" : "A type-erased command.",
        "key.offset" : 795,
        "key.namelength" : 14,
        "key.doc.line" : 33,
        "key.length" : 14,
        "key.bodyoffset" : 795,
        "key.bodylength" : 1027,
        "key.name" : "CommandWrapper",
        "key.doc.column" : 15,
        "key.parsed_scope.end" : 65,
        "key.usr" : "s:V10Commandant14CommandWrapper",
        "key.doc.file" : "Sources\/Commandant\/Command.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 795,
        "key.doc.name" : "CommandWrapper",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let verb: String",
            "key.offset" : 848,
            "key.namelength" : 4,
            "key.doc.line" : 34,
            "key.length" : 4,
            "key.bodyoffset" : 848,
            "key.bodylength" : 0,
            "key.name" : "verb",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 34,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.nameoffset" : 848,
            "key.doc.name" : "verb",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 34,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let function: String",
            "key.offset" : 873,
            "key.namelength" : 8,
            "key.doc.line" : 35,
            "key.length" : 8,
            "key.bodyoffset" : 873,
            "key.bodylength" : 0,
            "key.name" : "function",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 35,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.nameoffset" : 873,
            "key.doc.name" : "function",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 35,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let run: ArgumentParser -> Result<(), CommandantError<ClientError>>",
            "key.offset" : 904,
            "key.namelength" : 3,
            "key.doc.line" : 37,
            "key.length" : 3,
            "key.bodyoffset" : 904,
            "key.bodylength" : 0,
            "key.name" : "run",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 37,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.nameoffset" : 904,
            "key.doc.name" : "run",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 37,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public let usage: () -> CommandantError<ClientError>?",
            "key.offset" : 982,
            "key.namelength" : 5,
            "key.doc.line" : 39,
            "key.length" : 5,
            "key.bodyoffset" : 982,
            "key.bodylength" : 0,
            "key.name" : "usage",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 39,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.nameoffset" : 982,
            "key.doc.name" : "usage",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 39,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "private init<C : CommandType where C.ClientError == ClientError, C.Options.ClientError == ClientError>(_ command: C)",
            "key.doc.comment" : "Creates a command that wraps another.",
            "key.offset" : 1078,
            "key.namelength" : 107,
            "key.doc.line" : 42,
            "key.length" : 107,
            "key.bodyoffset" : 1078,
            "key.bodylength" : 742,
            "key.name" : "init(_:)",
            "key.doc.column" : 10,
            "key.parsed_scope.end" : 65,
            "key.usr" : "s:FV10Commandant14CommandWrappercu__Rqd__S_11CommandTypezq_qqqd__S1_7OptionsS_11OptionsType11ClientErrorzqqd__S1_11ClientErrorqqqd__S1_7OptionsS2_11ClientError_FMGS0_q__Fqd__GS0_q__",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 1078,
            "key.doc.name" : "init(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 42,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          }
        ],
        "key.parsed_scope.start" : 33,
        "key.filepath" : "Sources\/Commandant\/Command.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.enum",
        "key.parsed_declaration" : "public enum CommandMode",
        "key.doc.comment" : "Describes the \"mode\" in which a command should run.",
        "key.offset" : 1893,
        "key.namelength" : 11,
        "key.doc.line" : 69,
        "key.length" : 11,
        "key.bodyoffset" : 1893,
        "key.bodylength" : 229,
        "key.name" : "CommandMode",
        "key.doc.column" : 13,
        "key.parsed_scope.end" : 75,
        "key.usr" : "s:O10Commandant11CommandMode",
        "key.doc.file" : "Sources\/Commandant\/Command.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1893,
        "key.doc.name" : "CommandMode",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "Options should be parsed from the given command-line arguments.",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 71,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "Options should be parsed from the given command-line arguments.",
                "key.offset" : 1982,
                "key.namelength" : 9,
                "key.doc.line" : 71,
                "key.length" : 9,
                "key.bodyoffset" : 1982,
                "key.bodylength" : 0,
                "key.name" : "Arguments",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 71,
                "key.usr" : "s:FO10Commandant11CommandMode9ArgumentsFMS0_FCS_14ArgumentParserS0_",
                "key.doc.file" : "Sources\/Commandant\/Command.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 1982,
                "key.doc.name" : "Arguments",
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.parsed_scope.start" : 71,
                "key.filepath" : "Sources\/Commandant\/Command.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "Each option should record its usage information in an error, for\n presentation to the user.",
            "key.bodyoffset" : 2116,
            "key.doc.line" : 75,
            "key.bodylength" : 0,
            "key.name" : "Usage",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 75,
            "key.usr" : "s:FO10Commandant11CommandMode5UsageFMS0_S0_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "Usage",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 75,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "Options should be parsed from the given command-line arguments.",
            "key.bodyoffset" : 1982,
            "key.doc.line" : 71,
            "key.bodylength" : 0,
            "key.name" : "Arguments",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 71,
            "key.usr" : "s:FO10Commandant11CommandMode9ArgumentsFMS0_FCS_14ArgumentParserS0_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "Arguments",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 71,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "Each option should record its usage information in an error, for\n presentation to the user.",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 75,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "Each option should record its usage information in an error, for\n presentation to the user.",
                "key.offset" : 2116,
                "key.namelength" : 5,
                "key.doc.line" : 75,
                "key.length" : 5,
                "key.bodyoffset" : 2116,
                "key.bodylength" : 0,
                "key.name" : "Usage",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 75,
                "key.usr" : "s:FO10Commandant11CommandMode5UsageFMS0_S0_",
                "key.doc.file" : "Sources\/Commandant\/Command.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 2116,
                "key.doc.name" : "Usage",
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.parsed_scope.start" : 75,
                "key.filepath" : "Sources\/Commandant\/Command.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          }
        ],
        "key.parsed_scope.start" : 69,
        "key.filepath" : "Sources\/Commandant\/Command.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.class",
        "key.parsed_declaration" : "public final class CommandRegistry<ClientError : ErrorType>",
        "key.doc.comment" : "Maintains the list of commands available to run.",
        "key.offset" : 2197,
        "key.namelength" : 15,
        "key.doc.line" : 79,
        "key.length" : 15,
        "key.bodyoffset" : 2197,
        "key.bodylength" : 1169,
        "key.name" : "CommandRegistry",
        "key.doc.column" : 20,
        "key.parsed_scope.end" : 109,
        "key.usr" : "s:C10Commandant15CommandRegistry",
        "key.doc.file" : "Sources\/Commandant\/Command.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 2197,
        "key.doc.name" : "CommandRegistry",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "private var commandsByVerb: [String: CommandWrapper<ClientError>] = [:]",
            "key.offset" : 2252,
            "key.namelength" : 14,
            "key.doc.line" : 80,
            "key.length" : 14,
            "key.bodyoffset" : 2252,
            "key.bodylength" : 0,
            "key.name" : "commandsByVerb",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 80,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.nameoffset" : 2252,
            "key.doc.name" : "commandsByVerb",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 80,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.subscript",
            "key.parsed_declaration" : "public subscript (verb: String) -> Commandant.CommandWrapper<ClientError>? { get }",
            "key.doc.comment" : "Returns the command matching the given verb, or nil if no such command\n is registered.",
            "key.bodyoffset" : 3275,
            "key.doc.line" : 107,
            "key.bodylength" : 0,
            "key.name" : "subscript(_:)",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 107,
            "key.usr" : "s:sC10Commandant15CommandRegistry9subscriptFSSGSqGVS_14CommandWrapperq___",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "subscript(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 107,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "public var commands: [Commandant.CommandWrapper<ClientError>] { get }",
            "key.doc.comment" : "All available commands.",
            "key.offset" : 2354,
            "key.namelength" : 8,
            "key.doc.line" : 83,
            "key.length" : 8,
            "key.bodyoffset" : 2354,
            "key.bodylength" : 108,
            "key.name" : "commands",
            "key.doc.column" : 13,
            "key.parsed_scope.end" : 85,
            "key.usr" : "s:vC10Commandant15CommandRegistry8commandsGSaGVS_14CommandWrapperq___",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2354,
            "key.doc.name" : "commands",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 83,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public init() {}",
            "key.offset" : 2473,
            "key.namelength" : 6,
            "key.doc.line" : 87,
            "key.length" : 6,
            "key.bodyoffset" : 2473,
            "key.bodylength" : 8,
            "key.name" : "init()",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 87,
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.nameoffset" : 2473,
            "key.doc.name" : "init()",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 87,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public func register<C : CommandType where C.ClientError == ClientError, C.Options.ClientError == ClientError>(command: C)",
            "key.doc.comment" : "Registers the given command, making it available to run.\n\n If another command was already registered with the same `verb`, it will\n be overwritten.",
            "key.offset" : 2662,
            "key.namelength" : 109,
            "key.doc.line" : 93,
            "key.length" : 109,
            "key.bodyoffset" : 2662,
            "key.bodylength" : 170,
            "key.name" : "register(_:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 95,
            "key.usr" : "s:FC10Commandant15CommandRegistry8registeru__Rqd__S_11CommandTypezq_qqqd__S1_7OptionsS_11OptionsType11ClientErrorzqqd__S1_11ClientErrorqqqd__S1_7OptionsS2_11ClientError_FGS0_q__Fqd__T_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2662,
            "key.doc.name" : "register(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 93,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public func runCommand(verb: String, arguments: [String]) -> Result.Result<(), Commandant.CommandantError<ClientError>>?",
            "key.doc.comment" : "Runs the command corresponding to the given verb, passing it the given\n arguments.\n\n Returns the results of the execution, or nil if no such command exists.",
            "key.offset" : 3022,
            "key.namelength" : 45,
            "key.doc.line" : 101,
            "key.length" : 45,
            "key.bodyoffset" : 3022,
            "key.bodylength" : 146,
            "key.name" : "runCommand(_:arguments:)",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 103,
            "key.usr" : "s:FC10Commandant15CommandRegistry10runCommanduRq_Ss9ErrorType_FGS0_q__FTSS9argumentsGSaSS__GSqGO6Result6ResultT_GOS_15CommandantErrorq____",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 3022,
            "key.doc.name" : "runCommand(_:arguments:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 101,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          }
        ],
        "key.parsed_scope.start" : 79,
        "key.filepath" : "Sources\/Commandant\/Command.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.parsed_declaration" : "public final class CommandRegistry<ClientError : ErrorType>",
        "key.doc.comment" : "Maintains the list of commands available to run.",
        "key.offset" : 3379,
        "key.namelength" : 15,
        "key.doc.line" : 79,
        "key.length" : 15,
        "key.name" : "CommandRegistry",
        "key.doc.column" : 20,
        "key.parsed_scope.end" : 0,
        "key.usr" : "s:C10Commandant15CommandRegistry",
        "key.doc.file" : "Sources\/Commandant\/Command.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 3379,
        "key.doc.name" : "CommandRegistry",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "@noreturn public func main(defaultVerb defaultVerb: String, errorHandler: ClientError -> ())",
            "key.doc.comment" : "Hands off execution to the CommandRegistry, by parsing Process.arguments\n and then running whichever command has been identified in the argument\n list.\n\n If the chosen command executes successfully, the process will exit with\n a successful exit code.\n\n If the chosen command fails, the provided error handler will be invoked,\n then the process will exit with a failure exit code.\n\n If a matching command could not be found but there is any `executable-verb`\n style subcommand executable in the caller's `$PATH`, the subcommand will\n be executed.\n\n If a matching command could not be found or a usage error occurred,\n a helpful error message will be written to `stderr`, then the process\n will exit with a failure error code.",
            "key.offset" : 4214,
            "key.namelength" : 70,
            "key.doc.line" : 130,
            "key.length" : 70,
            "key.bodyoffset" : 4214,
            "key.bodylength" : 165,
            "key.name" : "main(defaultVerb:errorHandler:)",
            "key.doc.column" : 24,
            "key.parsed_scope.end" : 132,
            "key.usr" : "s:FC10Commandant15CommandRegistry4mainuRq_Ss9ErrorType_FGS0_q__FT11defaultVerbSS12errorHandlerFq_T__T_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 4214,
            "key.doc.name" : "main(defaultVerb:errorHandler:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 130,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "@noreturn public func main(arguments arguments: [String], defaultVerb: String, errorHandler: ClientError -> ())",
            "key.doc.comment" : "Hands off execution to the CommandRegistry, by parsing `arguments`\n and then running whichever command has been identified in the argument\n list.\n\n If the chosen command executes successfully, the process will exit with\n a successful exit code.\n\n If the chosen command fails, the provided error handler will be invoked,\n then the process will exit with a failure exit code.\n\n If a matching command could not be found but there is any `executable-verb`\n style subcommand executable in the caller's `$PATH`, the subcommand will\n be executed.\n\n If a matching command could not be found or a usage error occurred,\n a helpful error message will be written to `stderr`, then the process\n will exit with a failure error code.",
            "key.offset" : 5194,
            "key.namelength" : 89,
            "key.doc.line" : 151,
            "key.length" : 89,
            "key.bodyoffset" : 5194,
            "key.bodylength" : 945,
            "key.name" : "main(arguments:defaultVerb:errorHandler:)",
            "key.doc.column" : 24,
            "key.parsed_scope.end" : 188,
            "key.usr" : "s:FC10Commandant15CommandRegistry4mainuRq_Ss9ErrorType_FGS0_q__FT9argumentsGSaSS_11defaultVerbSS12errorHandlerFq_T__T_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 5194,
            "key.doc.name" : "main(arguments:defaultVerb:errorHandler:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 151,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "private func executeSubcommandIfExists(executableName: String, verb: String, arguments: [String]) -> Int32?",
            "key.doc.comment" : "Finds and executes a subcommand which exists in your $PATH. The executable\n name must be in the form of `executable-verb`.\n\n - Returns: The exit status of found subcommand or nil.",
            "key.offset" : 6353,
            "key.namelength" : 84,
            "key.doc.line" : 194,
            "key.length" : 84,
            "key.bodyoffset" : 6353,
            "key.bodylength" : 578,
            "key.name" : "executeSubcommandIfExists(_:verb:arguments:)",
            "key.doc.result_discussion" : [
              {
                "Para" : "The exit status of found subcommand or nil.",
                "kind" : ""
              }
            ],
            "key.doc.column" : 15,
            "key.parsed_scope.end" : 213,
            "key.usr" : "s:FC10Commandant15CommandRegistryP33_1DD6990CD6DFDE28F713A55F8EE2B70E25executeSubcommandIfExistsuRq_Ss9ErrorType_FGS0_q__FTSS4verbSS9argumentsGSaSS__GSqVSs5Int32_",
            "key.doc.file" : "Sources\/Commandant\/Command.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 6353,
            "key.doc.name" : "executeSubcommandIfExists(_:verb:arguments:)",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.function.free",
                "key.parsed_declaration" : "func launchTask(path: String, arguments: [String]) -> Int32",
                "key.offset" : 6537,
                "key.namelength" : 45,
                "key.doc.line" : 197,
                "key.length" : 45,
                "key.bodyoffset" : 6537,
                "key.bodylength" : 214,
                "key.name" : "launchTask(_:arguments:)",
                "key.doc.column" : 8,
                "key.parsed_scope.end" : 206,
                "key.doc.file" : "Sources\/Commandant\/Command.swift",
                "key.nameoffset" : 6537,
                "key.doc.name" : "launchTask(_:arguments:)",
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.parsed_scope.start" : 197,
                "key.filepath" : "Sources\/Commandant\/Command.swift"
              }
            ],
            "key.parsed_scope.start" : 194,
            "key.filepath" : "Sources\/Commandant\/Command.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/Command.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 6935,
    "key.diagnostic_stage" : ""
  }
}, {
  "Sources\/Commandant\/ArgumentParser.swift" : {
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.decl.enum",
        "key.parsed_declaration" : "private enum RawArgument : Equatable",
        "key.doc.comment" : "Represents an argument passed on the command line.",
        "key.offset" : 256,
        "key.namelength" : 11,
        "key.doc.line" : 13,
        "key.length" : 11,
        "key.bodyoffset" : 256,
        "key.bodylength" : 313,
        "key.name" : "RawArgument",
        "key.doc.column" : 14,
        "key.parsed_scope.end" : 22,
        "key.usr" : "s:O10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument",
        "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 256,
        "key.doc.name" : "RawArgument",
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "A key corresponding to an option (e.g., `verbose` for `--verbose`).",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 15,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "A key corresponding to an option (e.g., `verbose` for `--verbose`).",
                "key.offset" : 360,
                "key.namelength" : 3,
                "key.doc.line" : 15,
                "key.length" : 3,
                "key.bodyoffset" : 360,
                "key.bodylength" : 0,
                "key.name" : "Key",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 15,
                "key.usr" : "s:FO10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument3KeyFMS0_FSSS0_",
                "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 360,
                "key.doc.name" : "Key",
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.parsed_scope.start" : 15,
                "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "One or more flag arguments (e.g 'r' and 'f' for `-rf`)",
            "key.bodyoffset" : 548,
            "key.doc.line" : 22,
            "key.bodylength" : 0,
            "key.name" : "Flag",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 22,
            "key.usr" : "s:FO10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument4FlagFMS0_FGVSs3SetVSs9Character_S0_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "Flag",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 22,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "A key corresponding to an option (e.g., `verbose` for `--verbose`).",
            "key.bodyoffset" : 360,
            "key.doc.line" : 15,
            "key.bodylength" : 0,
            "key.name" : "Key",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 15,
            "key.usr" : "s:FO10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument3KeyFMS0_FSSS0_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "Key",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 15,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumelement",
            "key.parsed_declaration" : "",
            "key.doc.comment" : "A value, either associated with an option or passed as a positional\n argument.",
            "key.bodyoffset" : 467,
            "key.doc.line" : 19,
            "key.bodylength" : 0,
            "key.name" : "Value",
            "key.doc.column" : 7,
            "key.parsed_scope.end" : 19,
            "key.usr" : "s:FO10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument5ValueFMS0_FSSS0_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "Value",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 19,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "A value, either associated with an option or passed as a positional\n argument.",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 19,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "A value, either associated with an option or passed as a positional\n argument.",
                "key.offset" : 467,
                "key.namelength" : 5,
                "key.doc.line" : 19,
                "key.length" : 5,
                "key.bodyoffset" : 467,
                "key.bodylength" : 0,
                "key.name" : "Value",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 19,
                "key.usr" : "s:FO10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument5ValueFMS0_FSSS0_",
                "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 467,
                "key.doc.name" : "Value",
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.parsed_scope.start" : 19,
                "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.doc.comment" : "One or more flag arguments (e.g 'r' and 'f' for `-rf`)",
            "key.offset" : 0,
            "key.namelength" : 0,
            "key.doc.line" : 22,
            "key.length" : 0,
            "key.doc.column" : 2,
            "key.parsed_scope.end" : 0,
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 0,
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.parsed_declaration" : "",
                "key.doc.comment" : "One or more flag arguments (e.g 'r' and 'f' for `-rf`)",
                "key.offset" : 548,
                "key.namelength" : 4,
                "key.doc.line" : 22,
                "key.length" : 4,
                "key.bodyoffset" : 548,
                "key.bodylength" : 0,
                "key.name" : "Flag",
                "key.doc.column" : 7,
                "key.parsed_scope.end" : 22,
                "key.usr" : "s:FO10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument4FlagFMS0_FGVSs3SetVSs9Character_S0_",
                "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
                "key.doc.full_as_xml" : "",
                "key.nameoffset" : 548,
                "key.doc.name" : "Flag",
                "key.accessibility" : "source.lang.swift.accessibility.private",
                "key.parsed_scope.start" : 22,
                "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
              }
            ],
            "key.parsed_scope.start" : 0,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          }
        ],
        "key.parsed_scope.start" : 13,
        "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.parsed_declaration" : "private func ==(lhs: RawArgument, rhs: RawArgument) -> Bool",
        "key.offset" : 585,
        "key.namelength" : 38,
        "key.doc.line" : 25,
        "key.length" : 38,
        "key.bodyoffset" : 585,
        "key.bodylength" : 287,
        "key.name" : "==(_:_:)",
        "key.doc.column" : 14,
        "key.parsed_scope.end" : 38,
        "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
        "key.nameoffset" : 585,
        "key.doc.name" : "==(_:_:)",
        "key.accessibility" : "source.lang.swift.accessibility.private",
        "key.parsed_scope.start" : 25,
        "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.extension",
        "key.parsed_declaration" : "private enum RawArgument : Equatable",
        "key.doc.comment" : "Represents an argument passed on the command line.",
        "key.offset" : 885,
        "key.namelength" : 11,
        "key.doc.line" : 13,
        "key.length" : 11,
        "key.name" : "RawArgument",
        "key.doc.column" : 14,
        "key.parsed_scope.end" : 0,
        "key.usr" : "s:O10CommandantP33_BA859BFBBE9DF3838A11641CB273713E11RawArgument",
        "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 885,
        "key.doc.name" : "RawArgument",
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "private var description: String",
            "key.offset" : 937,
            "key.namelength" : 11,
            "key.doc.line" : 42,
            "key.length" : 11,
            "key.bodyoffset" : 937,
            "key.bodylength" : 194,
            "key.name" : "description",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 53,
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.nameoffset" : 937,
            "key.doc.name" : "description",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 42,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          }
        ],
        "key.parsed_scope.start" : 0,
        "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
      },
      {
        "key.kind" : "source.lang.swift.decl.class",
        "key.parsed_declaration" : "public final class ArgumentParser",
        "key.doc.comment" : "Destructively parses a list of command-line arguments.",
        "key.offset" : 1214,
        "key.namelength" : 14,
        "key.doc.line" : 57,
        "key.length" : 14,
        "key.bodyoffset" : 1214,
        "key.bodylength" : 3719,
        "key.name" : "ArgumentParser",
        "key.doc.column" : 20,
        "key.parsed_scope.end" : 191,
        "key.usr" : "s:C10Commandant14ArgumentParser",
        "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
        "key.doc.full_as_xml" : "",
        "key.nameoffset" : 1214,
        "key.doc.name" : "ArgumentParser",
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "private var rawArguments: [Commandant.RawArgument]",
            "key.doc.comment" : "The remaining arguments to be extracted, in their raw form.",
            "key.offset" : 1309,
            "key.namelength" : 12,
            "key.doc.line" : 59,
            "key.length" : 12,
            "key.bodyoffset" : 1309,
            "key.bodylength" : 0,
            "key.name" : "rawArguments",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 59,
            "key.usr" : "s:vC10Commandant14ArgumentParserP33_BA859BFBBE9DF3838A11641CB273713E12rawArgumentsGSaOS_P33_BA859BFBBE9DF3838A11641CB273713E11RawArgument_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 1309,
            "key.doc.name" : "rawArguments",
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.parsed_scope.start" : 59,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "private var rawArguments: [Commandant.RawArgument]",
            "key.doc.comment" : "The remaining arguments to be extracted, in their raw form.",
            "key.bodyoffset" : 1309,
            "key.doc.line" : 59,
            "key.bodylength" : 0,
            "key.name" : "rawArguments",
            "key.doc.column" : 14,
            "key.parsed_scope.end" : 59,
            "key.usr" : "s:vC10Commandant14ArgumentParserP33_BA859BFBBE9DF3838A11641CB273713E12rawArgumentsGSaOS_P33_BA859BFBBE9DF3838A11641CB273713E11RawArgument_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.doc.name" : "rawArguments",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 59,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "public init(_ arguments: [String])",
            "key.doc.comment" : "Initializes the generator from a simple list of command-line arguments.",
            "key.offset" : 1428,
            "key.namelength" : 27,
            "key.doc.line" : 62,
            "key.length" : 27,
            "key.bodyoffset" : 1428,
            "key.bodylength" : 749,
            "key.name" : "init(_:)",
            "key.doc.column" : 9,
            "key.parsed_scope.end" : 87,
            "key.usr" : "s:FC10Commandant14ArgumentParsercFMS0_FGSaSS_S0_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 1428,
            "key.doc.name" : "init(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.parsed_scope.start" : 62,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.parsed_declaration" : "internal var remainingArguments: [String]? { get }",
            "key.doc.comment" : "Returns the remaining arguments.",
            "key.offset" : 2232,
            "key.namelength" : 18,
            "key.doc.line" : 90,
            "key.length" : 18,
            "key.bodyoffset" : 2232,
            "key.bodylength" : 107,
            "key.name" : "remainingArguments",
            "key.doc.column" : 15,
            "key.parsed_scope.end" : 92,
            "key.usr" : "s:vC10Commandant14ArgumentParser18remainingArgumentsGSqGSaSS__",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2232,
            "key.doc.name" : "remainingArguments",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 90,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "internal func consumeBooleanKey(key: String) -> Bool?",
            "key.doc.comment" : "Returns whether the given key was enabled or disabled, or nil if it\n was not given at all.\n\n If the key is found, it is then removed from the list of arguments\n remaining to be parsed.",
            "key.offset" : 2563,
            "key.namelength" : 30,
            "key.doc.line" : 99,
            "key.length" : 30,
            "key.bodyoffset" : 2563,
            "key.bodylength" : 322,
            "key.name" : "consumeBooleanKey(_:)",
            "key.doc.column" : 16,
            "key.parsed_scope.end" : 115,
            "key.usr" : "s:FC10Commandant14ArgumentParser17consumeBooleanKeyFS0_FSSGSqSb_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 2563,
            "key.doc.name" : "consumeBooleanKey(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 99,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "internal func consumeValueForKey(key: String) -> Result.Result<String?, Commandant.CommandantError<Result.NoError>>",
            "key.doc.comment" : "Returns the value associated with the given flag, or nil if the flag was\n not specified. If the key is presented, but no value was given, an error\n is returned.\n\n If a value is found, the key and the value are both removed from the\n list of arguments remaining to be parsed.",
            "key.offset" : 3203,
            "key.namelength" : 31,
            "key.doc.line" : 123,
            "key.length" : 31,
            "key.bodyoffset" : 3203,
            "key.bodylength" : 581,
            "key.name" : "consumeValueForKey(_:)",
            "key.doc.column" : 16,
            "key.parsed_scope.end" : 148,
            "key.usr" : "s:FC10Commandant14ArgumentParser18consumeValueForKeyFS0_FSSGO6Result6ResultGSqSS_GOS_15CommandantErrorOS1_7NoError__",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 3203,
            "key.doc.name" : "consumeValueForKey(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 123,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "internal func consumePositionalArgument() -> String?",
            "key.doc.comment" : "Returns the next positional argument that hasn't yet been returned, or\n nil if there are no more positional arguments.",
            "key.offset" : 3930,
            "key.namelength" : 27,
            "key.doc.line" : 152,
            "key.length" : 27,
            "key.bodyoffset" : 3930,
            "key.bodylength" : 206,
            "key.name" : "consumePositionalArgument()",
            "key.doc.column" : 16,
            "key.parsed_scope.end" : 161,
            "key.usr" : "s:FC10Commandant14ArgumentParser25consumePositionalArgumentFS0_FT_GSqSS_",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 3930,
            "key.doc.name" : "consumePositionalArgument()",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 152,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "internal func consumeKey(key: String) -> Bool",
            "key.doc.comment" : "Returns whether the given key was specified and removes it from the\n list of arguments remaining.",
            "key.offset" : 4261,
            "key.namelength" : 23,
            "key.doc.line" : 165,
            "key.length" : 23,
            "key.bodyoffset" : 4261,
            "key.bodylength" : 176,
            "key.name" : "consumeKey(_:)",
            "key.doc.column" : 16,
            "key.parsed_scope.end" : 170,
            "key.usr" : "s:FC10Commandant14ArgumentParser10consumeKeyFS0_FSSSb",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 4261,
            "key.doc.name" : "consumeKey(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 165,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          },
          {
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.parsed_declaration" : "internal func consumeBooleanFlag(flag: Character) -> Bool",
            "key.doc.comment" : "Returns whether the given flag was specified and removes it from the\n list of arguments remaining.",
            "key.offset" : 4563,
            "key.namelength" : 35,
            "key.doc.line" : 174,
            "key.length" : 35,
            "key.bodyoffset" : 4563,
            "key.bodylength" : 368,
            "key.name" : "consumeBooleanFlag(_:)",
            "key.doc.column" : 16,
            "key.parsed_scope.end" : 191,
            "key.usr" : "s:FC10Commandant14ArgumentParser18consumeBooleanFlagFS0_FVSs9CharacterSb",
            "key.doc.file" : "Sources\/Commandant\/ArgumentParser.swift",
            "key.doc.full_as_xml" : "",
            "key.nameoffset" : 4563,
            "key.doc.name" : "consumeBooleanFlag(_:)",
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.parsed_scope.start" : 174,
            "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
          }
        ],
        "key.parsed_scope.start" : 57,
        "key.filepath" : "Sources\/Commandant\/ArgumentParser.swift"
      }
    ],
    "key.offset" : 0,
    "key.length" : 4935,
    "key.diagnostic_stage" : ""
  }
}]